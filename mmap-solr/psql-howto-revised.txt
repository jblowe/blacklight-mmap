# little tweaks to make the export work... :-/
perl -pe 's/\`/"/g;s/CHARACTER SET .UTF8.//g;s/DOUBLE(
PRECISION)?/real/;s/longtext/TEXT/i;s/DATETIME/TIMESTAMP/;s/LONGBLOB/BYTEA/;'
MMBC_for_Postgres.sql | perl -pe "s/\\\'/''/g;" > mmap.sql

# drop and recreate the database
psql -c "drop database mmap"
psql -c "create database mmap;"

# test to see the magic worked
rm -f nohup.out ; nohup psql -d mmap < mmap.sql 

psql "postgresql:<get the correct string from mmap staff>"

# make a backup of current database
defaultdb=> create database mmap20250507 with template mmap owner elizabeth;
CREATE DATABASE

# check to see it's all still there
defaultdb=> \c mmap20250507 
mmap20250507=> select count(*) from "tblArtifact_Master" ;
 count 
-------
 16355
(1 row)

# might have to do this
SELECT pg_terminate_backend(pg_stat_activity.pid) FROM pg_stat_activity WHERE pg_stat_activity.datname = 'mmap_dev';

# drop the old one
defaultdb=> drop database mmap;
DROP DATABASE
defaultdb=> drop database mmap_dev;
DROP DATABASE

# create the replacements
defaultdb=> create database mmap owner 'elizabeth';
CREATE DATABASE
defaultdb=> create database mmap_dev owner 'elizabeth';
CREATE DATABASE


defaultdb=> \q

psql "postgresql:<get the correct string from mmap staff>" < mmap.sql > mmap.log

# had to do this again...
mmap=> ALTER DATABASE mmap OWNER TO elizabeth;
ALTER DATABASE

mmap=> GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO joyce;
GRANT
mmap=> GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO elizabeth;
GRANT
mmap=> GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO sasha;
GRANT
mmap=> GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO jb;
GRANT

#########################################################################
# caveat lector!
# steps to reload revised mmap database, set autoincrement, and update start values.
# mainly reminders about how jb actually did it.

nohup psql "postgresql:<get the correct string from mmap staff>" < mmap.sql > mmap.log
nohup psql "postgresql:<get the correct string from mmap staff>" < mmap-schema-autoincrement-update.sql > mmap-schema-autoincrement-update.log
psql "postgresql:<get the correct string from mmap staff>" -c "\dt" > mmap-tables.txt
cut -c11-53 mmap-tables.txt > mmap-tables.txt
psql "postgresql:<get the correct string from mmap staff>" -c "\ds" > mmap-seq.txt
cut -c11-74 mmap-seq.txt > mmap-seq.txt
cut -f1 -d '_' mmap-seq.txt| perl -pe 's/_seq//' > part1
cut -f2,3 -d '_' mmap-seq.txt| perl -pe 's/_seq//' > part2
vi part1
vi part2
paste mmap-seq.txt part1 part2 | perl -pe "s/^/SELECT SETVAL('\"/;s/\t/\"', (SELECT MAX(\"/;s/\t/\") FROM \"/;s/$/\"));/" > mmap-setval-start.sql
rm -f nohup.out ; nohup psql "postgresql:<get the correct string from mmap staff>" -f mmap-setval-start.sql
mv nohup.out mmap-setval-start.log

